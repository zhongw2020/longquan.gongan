// -----------------------------------------------------------------------
// <auto-generated>
//    此代码由代码生成器生成。
//    手动更改此文件可能导致应用程序出现意外的行为。
//    如果重新生成代码，对此文件的任何修改都会丢失。
//    如果需要扩展此类，可以遵守如下规则进行扩展：
//      1. 横向扩展：如需给当前模块添加方法接口，可新建文件“IReportContract.cs”的分部接口“public partial interface IReportContract”添加方法，并添加相应新的分部基类 abstract partial class ReportServiceBase 实现新方法
// </auto-generated>
//
//  <copyright file="IReportContract.generated.cs" company="longquan.gongan">
//      longquan.gongan
//  </copyright>
//  <site>http://longquan.gongan</site>
//  <last-editor>longquan.gongan</last-editor>
// -----------------------------------------------------------------------

using System;
using System.Linq;
using System.Linq.Expressions;
using System.Threading.Tasks;

using OSharp.Data;
using OSharp.Extensions;

using longquan.gongan.Report.Dtos;
using longquan.gongan.Report.Entities;


namespace longquan.gongan.Report
{
    /// <summary>
    /// 业务契约接口：模块
    /// </summary>
    public partial interface IReportContract
    {
        #region 质保期告警信息业务

        /// <summary>
        /// 获取 质保期告警信息查询数据集
        /// </summary>
        IQueryable<DateWarn> DateWarns { get; }

        /// <summary>
        /// 检查质保期告警信息信息是否存在
        /// </summary>
        /// <param name="predicate">检查谓语表达式</param>
        /// <param name="id">更新的质保期告警信息编号</param>
        /// <returns>质保期告警信息是否存在</returns>
        Task<bool> CheckDateWarnExists(Expression<Func<DateWarn, bool>> predicate, int id = default(int));
        
        /// <summary>
        /// 添加质保期告警信息信息
        /// </summary>
        /// <param name="dtos">要添加的质保期告警信息DTO信息</param>
        /// <returns>业务操作结果</returns>
        Task<OperationResult> CreateDateWarns(params DateWarnInputDto[] dtos);
            
        /// <summary>
        /// 更新质保期告警信息信息
        /// </summary>
        /// <param name="dtos">包含更新信息的质保期告警信息DTO信息</param>
        /// <returns>业务操作结果</returns>
        Task<OperationResult> UpdateDateWarns(params DateWarnInputDto[] dtos);
            
        /// <summary>
        /// 删除质保期告警信息信息
        /// </summary>
        /// <param name="ids">要删除的质保期告警信息编号</param>
        /// <returns>业务操作结果</returns>
        Task<OperationResult> DeleteDateWarns(params int[] ids);
        

        #endregion
        
        #region 库存量告警信息业务

        /// <summary>
        /// 获取 库存量告警信息查询数据集
        /// </summary>
        IQueryable<StoreWarn> StoreWarns { get; }

        /// <summary>
        /// 检查库存量告警信息信息是否存在
        /// </summary>
        /// <param name="predicate">检查谓语表达式</param>
        /// <param name="id">更新的库存量告警信息编号</param>
        /// <returns>库存量告警信息是否存在</returns>
        Task<bool> CheckStoreWarnExists(Expression<Func<StoreWarn, bool>> predicate, int id = default(int));
        
        /// <summary>
        /// 添加库存量告警信息信息
        /// </summary>
        /// <param name="dtos">要添加的库存量告警信息DTO信息</param>
        /// <returns>业务操作结果</returns>
        Task<OperationResult> CreateStoreWarns(params StoreWarnInputDto[] dtos);
            
        /// <summary>
        /// 更新库存量告警信息信息
        /// </summary>
        /// <param name="dtos">包含更新信息的库存量告警信息DTO信息</param>
        /// <returns>业务操作结果</returns>
        Task<OperationResult> UpdateStoreWarns(params StoreWarnInputDto[] dtos);
            
        /// <summary>
        /// 删除库存量告警信息信息
        /// </summary>
        /// <param name="ids">要删除的库存量告警信息编号</param>
        /// <returns>业务操作结果</returns>
        Task<OperationResult> DeleteStoreWarns(params int[] ids);
        

        #endregion
        
        #region 库存盘点信息业务

        /// <summary>
        /// 获取 库存盘点信息查询数据集
        /// </summary>
        IQueryable<StoreSum> StoreSums { get; }

        /// <summary>
        /// 检查库存盘点信息信息是否存在
        /// </summary>
        /// <param name="predicate">检查谓语表达式</param>
        /// <param name="id">更新的库存盘点信息编号</param>
        /// <returns>库存盘点信息是否存在</returns>
        Task<bool> CheckStoreSumExists(Expression<Func<StoreSum, bool>> predicate, int id = default(int));
        
        /// <summary>
        /// 添加库存盘点信息信息
        /// </summary>
        /// <param name="dtos">要添加的库存盘点信息DTO信息</param>
        /// <returns>业务操作结果</returns>
        Task<OperationResult> CreateStoreSums(params StoreSumInputDto[] dtos);
            
        /// <summary>
        /// 更新库存盘点信息信息
        /// </summary>
        /// <param name="dtos">包含更新信息的库存盘点信息DTO信息</param>
        /// <returns>业务操作结果</returns>
        Task<OperationResult> UpdateStoreSums(params StoreSumInputDto[] dtos);
            
        /// <summary>
        /// 删除库存盘点信息信息
        /// </summary>
        /// <param name="ids">要删除的库存盘点信息编号</param>
        /// <returns>业务操作结果</returns>
        Task<OperationResult> DeleteStoreSums(params int[] ids);
        

        #endregion
        
    }
}
