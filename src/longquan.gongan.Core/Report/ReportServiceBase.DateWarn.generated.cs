// -----------------------------------------------------------------------
// <auto-generated>
//    此代码由代码生成器生成。
//    手动更改此文件可能导致应用程序出现意外的行为。
//    如果重新生成代码，对此文件的任何修改都会丢失。
//    如果需要扩展此类，可以遵守如下规则进行扩展：
//      1.横向扩展：如需给当前实体 DateWarn 添加方法，可新建文件“ReportServiceBase.DateWarn.cs”的分部类“public abstract partial class ReportServiceBase”添加功能
//      2.纵向扩展：如需要重写当前实体 DateWarn 的业务实现，可新建文件“ReportService.DateWarn.cs”的分部类“public partial class ReportService”对现有方法进行方法重写实现
// </auto-generated>
//
//  <copyright file="ReportServiceBase.DateWarn.generated.cs" company="longquan.gongan">
//      longquan.gongan
//  </copyright>
//  <site>http://longquan.gongan</site>
//  <last-editor>longquan.gongan</last-editor>
// -----------------------------------------------------------------------

using System;
using System.Linq;
using System.Linq.Expressions;
using System.Threading.Tasks;

using OSharp.Data;
using OSharp.Dependency;
using OSharp.Extensions;
using OSharp.Mapping;

using longquan.gongan.Report.Dtos;
using longquan.gongan.Report.Entities;


namespace longquan.gongan.Report
{
    public abstract partial class ReportServiceBase
    {
        /// <summary>
        /// 获取 质保期告警信息查询数据集
        /// </summary>
        public IQueryable<DateWarn> DateWarns
        {
            get { return DateWarnRepository.QueryAsNoTracking(); }
        }

        /// <summary>
        /// 检查质保期告警信息是否存在
        /// </summary>
        /// <param name="predicate">检查谓语表达式</param>
        /// <param name="id">更新的质保期告警信息编号</param>
        /// <returns>质保期告警信息是否存在</returns>
        public virtual Task<bool> CheckDateWarnExists(Expression<Func<DateWarn, bool>> predicate, int id = default(int))
        {
            return DateWarnRepository.CheckExistsAsync(predicate, id);
        }
        
        /// <summary>
        /// 添加质保期告警信息
        /// </summary>
        /// <param name="dtos">要添加的质保期告警信息DTO信息</param>
        /// <returns>业务操作结果</returns>
        public virtual Task<OperationResult> CreateDateWarns(params DateWarnInputDto[] dtos)
        {
            Check.Validate<DateWarnInputDto, int>(dtos, nameof(dtos));
            return DateWarnRepository.InsertAsync(dtos);
        }
        
        /// <summary>
        /// 更新质保期告警信息
        /// </summary>
        /// <param name="dtos">包含更新信息的质保期告警信息DTO信息</param>
        /// <returns>业务操作结果</returns>
        public virtual Task<OperationResult> UpdateDateWarns(params DateWarnInputDto[] dtos)
        {
            Check.Validate<DateWarnInputDto, int>(dtos, nameof(dtos));
            return DateWarnRepository.UpdateAsync(dtos);
        }
        
        /// <summary>
        /// 删除质保期告警信息
        /// </summary>
        /// <param name="ids">要删除的质保期告警信息编号</param>
        /// <returns>业务操作结果</returns>
        public virtual Task<OperationResult> DeleteDateWarns(params int[] ids)
        {
            Check.NotNull(ids, nameof(ids));
            return DateWarnRepository.DeleteAsync(ids);
        }
    }
}
